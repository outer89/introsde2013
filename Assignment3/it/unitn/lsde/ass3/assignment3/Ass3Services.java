
package it.unitn.lsde.ass3.assignment3;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.Holder;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Ass3Services", targetNamespace = "http://assignment3.ass3.lsde.unitn.it/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Ass3Services {


    /**
     * 
     * @param personId
     * @return
     *     returns it.unitn.lsde.ass3.assignment3.Person
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "person", partName = "person")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/readPersonRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/readPersonResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/readPerson/Fault/Exception")
    })
    public Person readPerson(
        @WebParam(name = "personId", partName = "personId")
        int personId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param person
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "personId", partName = "personId")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/createPersonRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/createPersonResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/createPerson/Fault/Exception")
    })
    public int createPerson(
        @WebParam(name = "person", partName = "person")
        Person person)
        throws Exception_Exception
    ;

    /**
     * 
     * @param person
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "personId", partName = "personId")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePersonRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePersonResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePerson/Fault/Exception")
    })
    public int updatePerson(
        @WebParam(name = "person", partName = "person")
        Person person)
        throws Exception_Exception
    ;

    /**
     * 
     * @param personId
     * @throws Exception_Exception
     */
    @WebMethod
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/deletePersonRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/deletePersonResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/deletePerson/Fault/Exception")
    })
    public void deletePerson(
        @WebParam(name = "personId", mode = WebParam.Mode.INOUT, partName = "personId")
        Holder<Integer> personId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param personId
     * @param healthProfile
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "hpId", partName = "hpId")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePersonHealthProfileRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePersonHealthProfileResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/updatePersonHealthProfile/Fault/Exception")
    })
    public int updatePersonHealthProfile(
        @WebParam(name = "personId", partName = "personId")
        int personId,
        @WebParam(name = "healthProfile", partName = "healthProfile")
        Healthprofile healthProfile)
        throws Exception_Exception
    ;

    /**
     * 
     * @param personId
     * @return
     *     returns it.unitn.lsde.ass3.assignment3.History
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "history", partName = "history")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/getHistoryRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/getHistoryResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/getHistory/Fault/Exception")
    })
    public History getHistory(
        @WebParam(name = "personId", partName = "personId")
        int personId)
        throws Exception_Exception
    ;

    /**
     * 
     * @param personId
     * @param healthProfile
     * @return
     *     returns int
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(name = "hpId", partName = "hpId")
    @Action(input = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/addPersonHealthProfileRequest", output = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/addPersonHealthProfileResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://assignment3.ass3.lsde.unitn.it/Ass3Services/addPersonHealthProfile/Fault/Exception")
    })
    public int addPersonHealthProfile(
        @WebParam(name = "personId", partName = "personId")
        int personId,
        @WebParam(name = "healthProfile", partName = "healthProfile")
        Healthprofile healthProfile)
        throws Exception_Exception
    ;

}
